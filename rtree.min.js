(()=>{"use strict";var e={455:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toHilbertCoordinates=void 0,t.toHilbertCoordinates=function(e,t,r){const i=e,o=(1<<i)-1;let n=0;const h=t^r,s=~t&o,a=~r&o,c=s^r;let d=0,l=0;for(let e=1;e<i;e++)l=(l&h|(d^a)&c)>>1,d=(d&(l^s)|~d&(l^a))>>1;return n=~d&(l^t)|d&(l^a),function(e,t){let r=0,i=Math.max(e,t),o=0;for(;i>0;)o++,i>>=1;for(let i=0;i<o;i++){const o=1<<i;r+=((t&o)>0?1<<2*i:0)+((e&o)>0?1<<2*i+1:0)}return r}(n,h)}},718:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.sortRectanglesByHilbertCoordinates=void 0;const i=r(455);t.sortRectanglesByHilbertCoordinates=function(e){const{maxCoordinate:t,minCoordinate:r}=e.map((e=>e.getCenter())).map((({centerX:e,centerY:t})=>[Math.floor(e),Math.floor(t)])).reduce((({maxCoordinate:e,minCoordinate:t},[r,i])=>({maxCoordinate:Math.max(e,Math.max(r,i)),minCoordinate:Math.min(t,Math.min(r,i))})),{maxCoordinate:-1/0,minCoordinate:1/0}),o=e.map((e=>Object.assign(Object.assign({},e.getCenter()),{rectangle:e}))).map((({rectangle:e,centerX:o,centerY:n})=>({rectangle:e,weight:(0,i.toHilbertCoordinates)(t-r,Math.floor(o)-r,Math.floor(n)-r)})));return o.sort(((e,t)=>e.weight-t.weight)),o.map((({rectangle:e})=>e))}},122:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.splitIntoTwo=void 0;const i=r(630),o=r(718);t.splitIntoTwo=function(e){if(e.length<=1)return e;const t=Math.floor(e.length/2),r=(0,o.sortRectanglesByHilbertCoordinates)(e),n=r.splice(0,t),h=r,s=n[0],a=new i.RTreeRectangle({x:s.x,y:s.y,height:s.height,width:s.width});a.insertChildren(n);const c=h[0],d=new i.RTreeRectangle({x:c.x,y:c.y,height:c.height,width:c.width});return d.insertChildren(h),[a,d]}},534:function(e,t,r){var i=this&&this.__rest||function(e,t){var r={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(e);o<i.length;o++)t.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(e,i[o])&&(r[i[o]]=e[i[o]])}return r};Object.defineProperty(t,"__esModule",{value:!0}),t.RTree=void 0;const o=r(630),n=r(718),h=r(122);t.RTree=class{constructor({maxChildrenPerNode:e=4}={}){this.maxChildrenPerNode=e}recursiveSearchOverlappingNodes(e,t){return t.containedBy(e)||t.isLeafNode()&&t.overlaps(e)?t.getSubtreeData():t.children.filter((t=>t.overlaps(e))).map((t=>this.recursiveSearchOverlappingNodes(e,t))).reduce(((e,t)=>e.concat(t)),[])}recursiveVisitOverlappingNodes(e,t,r){if(t.containedBy(e))r(t.getSubtreeData());else if(t.isLeafNode()&&t.overlaps(e))r(t.getSubtreeData());else for(const i of t.children)i.overlaps(e)&&this.recursiveVisitOverlappingNodes(e,i,r)}search(e){if(this.rootNode)return this.recursiveSearchOverlappingNodes(this.searchRect(e),this.rootNode).map((e=>e.data))}visit(e,t){this.rootNode&&this.recursiveVisitOverlappingNodes(this.searchRect(e),this.rootNode,t)}searchRect(e){if(void 0===this.rootNode)throw new Error("Expect tree to be created");if(e.x<0)throw new Error("Expect X coordinate to be >= 0");if(e.y<0)throw new Error("Expect Y coordinate to be >= 0");if(e.height<0)throw new Error("Expect `height` to be >= 0");if(e.width<0)throw new Error("Expect `width` to be >= 0");return new o.RTreeRectangle(e)}insert(e){if(e.x<0)throw new Error("Expect X coordinate to be >= 0");if(e.y<0)throw new Error("Expect Y coordinate to be >= 0");if("height"in e&&e.height<0)throw new Error("Expect `height` to be >= 0 if defined");if("width"in e&&e.width<0)throw new Error("Expect `width` to be >= 0 if defined");const t=new o.RTreeRectangle(e);if(!this.rootNode){const{data:t}=e,r=i(e,["data"]);this.rootNode=new o.RTreeRectangle(r)}const r=[this.rootNode];for(;r.length;){const[e]=r.splice(0,1);e.hasLeafNodes()?e.insertChildren([t]):(e.growRectangleToFit(t),r.push(e.children.map((e=>({node:e,area:e.increaseInAreaIfGrownByRectangle(t)}))).reduce(((e,t)=>t.area<e.area?t:e)).node))}this.balanceTreePath(t)}constructTreeLevelsRecursively(e){const t=[].concat(e),r=Math.ceil(e.length/this.maxChildrenPerNode),i=new Array(r).fill(0).map((()=>{const e=t.splice(0,this.maxChildrenPerNode),r=new o.RTreeRectangle({width:e[0].width,height:e[0].height,x:e[0].x,y:e[0].y});return r.insertChildren(e),r}));return i.length>1?this.constructTreeLevelsRecursively(i):i}batchInsert(e){if(void 0!==this.rootNode)throw new Error("Expect tree to be empty before batch inserting nodes");for(const t of e){if(t.x<0)throw new Error("Expect X coordinate to be >= 0");if(t.y<0)throw new Error("Expect Y coordinate to be >= 0");if("height"in t&&t.height<0)throw new Error("Expect `height` to be >= 0 if defined");if("width"in t&&t.width<0)throw new Error("Expect `width` to be >= 0 if defined")}const t=e.map((e=>new o.RTreeRectangle(e)));[this.rootNode]=this.constructTreeLevelsRecursively((0,n.sortRectanglesByHilbertCoordinates)(t))}balanceTreePath(e){if(!e.isLeafNode())throw new Error("Expect the provided node to be a leaf node");const t=[e.parent];for(;t.length;){const[e]=t.splice(0,1);if(e.children.length>this.maxChildrenPerNode)if(e.parent){const r=e.parent;r.insertChildren((0,h.splitIntoTwo)(e.children)),r.removeChild(e),r.children.length>this.maxChildrenPerNode&&t.push(r)}else{const t=[].concat(e.children);e.removeChildren(),e.insertChildren((0,h.splitIntoTwo)(t))}}}}},630:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RTreeRectangle=void 0;const i=r(233);class o extends i.Rectangle{constructor(e){super(e),this.children=[],this.record=e}isLeafNode(){return 0===this.children.length}hasLeafNodes(){return this.isLeafNode()||this.children.some((e=>e.isLeafNode()))}insertChildren(e){for(const t of e)this.growRectangleToFit(t),t.setParent(this),this.children.push(t)}setParent(e){this.parent=e}unsetParent(){this.parent=void 0}removeChild(e){e.unsetParent(),this.children.splice(this.children.indexOf(e),1)}removeChildren(){for(const e of this.children)e.parent=void 0;this.children.length=0}getSubtreeData(){var e;return[...(null===(e=this.record)||void 0===e?void 0:e.data)?[this.record]:[],...0===this.children.length?[]:this.children.map((e=>e.getSubtreeData())).reduce(((e,t)=>e.concat(t)),[])]}}t.RTreeRectangle=o},233:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Rectangle=void 0,t.Rectangle=class{constructor(e){this.x=e.x,this.y=e.y,this.width="width"in e?e.width:0,this.height="height"in e?e.height:0}overlaps(e){return this.x<=e.x+e.width&&this.x+this.width>=e.x&&this.y+this.height>=e.y&&e.y+e.height>=this.y}containedBy(e){return this.x>=e.x&&this.x+this.width<=e.x+e.width&&this.y>=e.y&&this.y+this.height<=e.y+e.height}growRectangleToFit(e){this.height=Math.max(this.y+this.height,e.y+e.height)-Math.min(this.y,e.y),this.width=Math.max(this.x+this.width,e.x+e.width)-Math.min(this.x,e.x),this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y)}increaseInAreaIfGrownByRectangle(e){return(Math.max(this.y+this.height,e.y+e.height)-Math.min(this.y,e.y))*(Math.max(this.x+this.width,e.x+e.width)-Math.min(this.x,e.x))-this.getArea()}getArea(){return this.height*this.width}getCenter(){return{centerX:this.x+this.width/2,centerY:this.y+this.height/2}}}}},t={};!function r(i){var o=t[i];if(void 0!==o)return o.exports;var n=t[i]={exports:{}};return e[i].call(n.exports,n,n.exports,r),n.exports}(534)})();